[{"moduleName":"Testing_App","totalNoOfTestCases":5,"noOfTestCasesPassed":0,"errorList":["WSA 1 - required bodyparser","WSA 2 - required requestLogger","WSA 3 - required router","WSA 4 - required errorLogger","WSA 5 - Used the middlewares in correct order"]},{"moduleName":"Testing_ErrorLogger","totalNoOfTestCases":3,"noOfTestCasesPassed":0,"errorList":["WSE 1 - Response status set to 500 by default for Error","WSE 2 - Response status is set using Error status","WSE 3 - Response Should Contain Error Message"]},{"moduleName":"Testing_Validator","totalNoOfTestCases":4,"noOfTestCasesPassed":2,"errorList":["WSV 1 - ValidateFlightId=> Error for invalid Flight Id","WSV 3 - validateBookingId=> Error for invalid booking id"]},{"moduleName":"Testing_Routing","totalNoOfTestCases":12,"noOfTestCasesPassed":0,"errorList":["WSR 1 - Response from GET /getAllBookings","WSR 2 - Error handling in GET /getAllBookings","WSR 3 - Response from POST /bookFlight","WSR 4 - Error handling in POST /bookFlight","WSR 5 - Used FlightBooking Bean class in POST /bookFlight","WSR 6 - Response from PUT /updateBooking/:bookingId","WSR 7 - Error handling in PUT /updateBooking/:bookingId","WSR 8 - Proper parameters passed to updateBooking method of service","WSR 9 - Response from GET /bookingsByFlight/:flightId","WSR 10 - Error handling in GET /bookingsByFlight/:flightId","WSR 11 - Response from GET /customerBookings/:customerId/:flightId","WSR 12 - Error handling in GET /bookingsByFlight/:flightId"]}]
